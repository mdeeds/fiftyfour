{"version":3,"sources":["webpack:///./src/cardStub.js","webpack:///./src/deck.js","webpack:///./src/index.js","webpack:///./src/player.js","webpack:///./src/visibleCard.js","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"names":[],"mappings":";;;;;;;AAAa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,gBAAgB;AAChB,sBAAsB,mBAAO,CAAC,GAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,oC;;;;;;;ACZa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,YAAY;AACZ,mBAAmB,mBAAO,CAAC,GAAY;AACvC,sBAAsB,mBAAO,CAAC,GAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,KAAK;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,gC;;;;;;;;ACxDa;AACb,6BAA6C,CAAC,cAAc,CAAC;AAC7D,eAAe,mBAAO,CAAC,EAAQ;AAC/B,iBAAiB,mBAAO,CAAC,GAAU;AACnC,sBAAsB,mBAAO,CAAC,GAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;ACzBa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,kC;;;;;;;ACxBa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,KAAK;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,gCAAgC,IAAI,EAAE,KAAK;AAC3C;AACA;AACA,mBAAmB;AACnB;AACA,uC;;;;;;UCzFA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;UCrBA;UACA;UACA;UACA","file":"main.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CardStub = void 0;\nconst visibleCard_1 = require(\"./visibleCard\");\nclass CardStub {\n    constructor(suit, rank) {\n        this.suit = suit;\n        this.rank = rank;\n        this.pip = visibleCard_1.VisibleCard.getPip(rank);\n    }\n}\nexports.CardStub = CardStub;\n//# sourceMappingURL=cardStub.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Deck = void 0;\nconst cardStub_1 = require(\"./cardStub\");\nconst visibleCard_1 = require(\"./visibleCard\");\nclass Deck {\n    constructor(content) {\n        // Shallow copy of the content.\n        this.inDeck = content.slice();\n        this.dealt = [];\n    }\n    static pokerDeckStubs() {\n        const cards = [];\n        for (const suit of visibleCard_1.VisibleCard.suits) {\n            for (let rank = 2; rank <= 14; ++rank) {\n                cards.push(new cardStub_1.CardStub(suit, rank));\n            }\n        }\n        return cards;\n    }\n    getInDeck() {\n        return this.inDeck;\n    }\n    remove(card) {\n        const i = this.inDeck.indexOf(card);\n        if (i < 0) {\n            throw new Error(`Card not found in deck: ${card}`);\n        }\n        this.dealt.push(this.inDeck[i]);\n        this.inDeck.slice(i, 1);\n    }\n    removeCards(cards) {\n        cards.forEach(c => {\n            this.remove(c);\n        });\n    }\n    shuffle() {\n        const n = this.inDeck.length;\n        for (let i = 0; i < this.inDeck.length; ++i) {\n            const toPosition = Math.trunc(Math.random() * (n - i) + i);\n            const t = this.inDeck[i];\n            this.inDeck[i] = this.inDeck[toPosition];\n            this.inDeck[toPosition] = t;\n        }\n    }\n    pop() {\n        const result = this.inDeck.pop();\n        this.dealt.push(result);\n        return result;\n    }\n    recombine() {\n        this.inDeck.push(...this.dealt);\n        this.dealt.splice(0);\n    }\n}\nexports.Deck = Deck;\n//# sourceMappingURL=deck.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst deck_1 = require(\"./deck\");\nconst player_1 = require(\"./player\");\nconst visibleCard_1 = require(\"./visibleCard\");\nconst body = document.getElementsByTagName('body')[0];\nconst players = player_1.Player.createNewPlayers(5);\nconst community = document.createElement('div');\ncommunity.classList.add('cardSet');\nbody.appendChild(community);\nconst playerCards = document.createElement('div');\nplayerCards.classList.add('cardSet');\nbody.appendChild(playerCards);\nconst offscreen = document.createElement('div');\nbody.appendChild(offscreen);\nconst cards = visibleCard_1.VisibleCard.pokerDeck(offscreen);\nconst deck = new deck_1.Deck(cards);\ndeck.shuffle();\ndeck.pop().moveTo(playerCards);\ndeck.pop().moveTo(playerCards);\ndeck.pop().moveTo(community);\ndeck.pop().moveTo(community);\ndeck.pop().moveTo(community);\ndeck.pop().moveTo(community);\ndeck.pop().moveTo(community);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Player = void 0;\nclass Player {\n    constructor() {\n        this.holeCards = new Array();\n        this.name = Player.names[Player.nameIndex];\n        ++Player.nameIndex;\n        this.isFolded = false;\n        this.betThisRound = 0;\n        this.chips = 0;\n    }\n    static createNewPlayers(numberOfPlayers) {\n        const players = [];\n        for (let i = 0; i < numberOfPlayers; ++i) {\n            players.push(new Player());\n        }\n        return players;\n    }\n}\nexports.Player = Player;\nPlayer.names = ['Abigail', 'Bob', 'Charlotte', 'Doogle', 'Eddie',\n    'Francine', 'Gary', 'Herman', 'Izzie', 'Jack', 'Kili'];\nPlayer.nameIndex = 0;\n//# sourceMappingURL=player.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VisibleCard = void 0;\nclass VisibleCard {\n    constructor(suit, rank, container) {\n        this.div = document.createElement('div');\n        this.suit = suit;\n        this.rank = rank;\n        this.pip = VisibleCard.getPip(rank);\n        this.setFace();\n        container.appendChild(this.div);\n        this.div.style.visibility = 'hidden';\n    }\n    static pokerDeck(container) {\n        const cards = [];\n        for (const suit of VisibleCard.suits) {\n            for (let rank = 2; rank <= 14; ++rank) {\n                const card = new VisibleCard(suit, rank, container);\n                cards.push(card);\n            }\n        }\n        return cards;\n    }\n    static getPip(rank) {\n        if (rank < 2 || rank > 14) {\n            throw new Error(`Rank is out of range: ${rank}`);\n        }\n        let pip = rank.toFixed(0);\n        if (rank === 14) {\n            pip = 'A';\n        }\n        else if (rank === 10) {\n            pip = 'T';\n        }\n        else if (rank === 11) {\n            pip = 'J';\n        }\n        else if (rank === 12) {\n            pip = 'Q';\n        }\n        else if (rank === 13) {\n            pip = 'K';\n        }\n        return pip;\n    }\n    moveTo(conatiner) {\n        // DOM automatically handles removing from previous parent.\n        conatiner.appendChild(this.div);\n        this.div.style.visibility = 'visible';\n    }\n    setFace() {\n        this.div.classList.add('card');\n        let pip = this.rank.toFixed(0);\n        if (this.rank === 14) {\n            pip = 'A';\n        }\n        else if (this.rank === 11) {\n            pip = 'J';\n        }\n        else if (this.rank === 12) {\n            pip = 'Q';\n        }\n        else if (this.rank === 13) {\n            pip = 'K';\n        }\n        let suit = '';\n        switch (this.suit) {\n            case 'C':\n                suit = '&#9827;';\n                this.div.classList.add('black');\n                break;\n            case 'D':\n                suit = '&#9830;';\n                this.div.classList.add('red');\n                break;\n            case 'H':\n                suit = '&#9829;';\n                this.div.classList.add('red');\n                break;\n            case 'S':\n                suit = '&#9824;';\n                this.div.classList.add('black');\n                break;\n        }\n        this.div.innerHTML = `${pip}${suit}`;\n    }\n}\nexports.VisibleCard = VisibleCard;\nVisibleCard.suits = ['C', 'D', 'H', 'S'];\n//# sourceMappingURL=visibleCard.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n__webpack_require__(138);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}